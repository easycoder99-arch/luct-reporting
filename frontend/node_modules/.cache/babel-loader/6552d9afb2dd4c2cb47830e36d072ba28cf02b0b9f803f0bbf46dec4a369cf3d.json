{"ast":null,"code":"const handleAddCourse = async courseData => {\n  try {\n    await courseManagementService.addCourse(courseData);\n    setSuccess('Course added successfully!');\n    setShowAddModal(false);\n    fetchCourses(); // Refresh the list\n  } catch (error) {\n    throw error;\n  }\n};\nconst handleUpdateCourse = async (courseId, courseData) => {\n  try {\n    await courseManagementService.updateCourse(courseId, courseData);\n    setSuccess('Course updated successfully!');\n    setShowEditModal(false);\n    fetchCourses(); // Refresh the list\n  } catch (error) {\n    throw error;\n  }\n};\nconst handleAssignLecturer = async (courseId, assignmentData) => {\n  try {\n    await courseManagementService.assignLecturer(courseId, assignmentData);\n    setSuccess('Lecturer assigned successfully!');\n    setShowAssignModal(false);\n    fetchCourses(); // Refresh the list\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["handleAddCourse","courseData","courseManagementService","addCourse","setSuccess","setShowAddModal","fetchCourses","error","handleUpdateCourse","courseId","updateCourse","setShowEditModal","handleAssignLecturer","assignmentData","assignLecturer","setShowAssignModal"],"sources":["C:/Users/FireBurn/Desktop/luct-reporting-app/frontend/src/pages/Courses.js"],"sourcesContent":["const handleAddCourse = async (courseData) => {\r\n  try {\r\n    await courseManagementService.addCourse(courseData);\r\n    setSuccess('Course added successfully!');\r\n    setShowAddModal(false);\r\n    fetchCourses(); // Refresh the list\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst handleUpdateCourse = async (courseId, courseData) => {\r\n  try {\r\n    await courseManagementService.updateCourse(courseId, courseData);\r\n    setSuccess('Course updated successfully!');\r\n    setShowEditModal(false);\r\n    fetchCourses(); // Refresh the list\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst handleAssignLecturer = async (courseId, assignmentData) => {\r\n  try {\r\n    await courseManagementService.assignLecturer(courseId, assignmentData);\r\n    setSuccess('Lecturer assigned successfully!');\r\n    setShowAssignModal(false);\r\n    fetchCourses(); // Refresh the list\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAOC,UAAU,IAAK;EAC5C,IAAI;IACF,MAAMC,uBAAuB,CAACC,SAAS,CAACF,UAAU,CAAC;IACnDG,UAAU,CAAC,4BAA4B,CAAC;IACxCC,eAAe,CAAC,KAAK,CAAC;IACtBC,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAOC,QAAQ,EAAER,UAAU,KAAK;EACzD,IAAI;IACF,MAAMC,uBAAuB,CAACQ,YAAY,CAACD,QAAQ,EAAER,UAAU,CAAC;IAChEG,UAAU,CAAC,8BAA8B,CAAC;IAC1CO,gBAAgB,CAAC,KAAK,CAAC;IACvBL,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,MAAMK,oBAAoB,GAAG,MAAAA,CAAOH,QAAQ,EAAEI,cAAc,KAAK;EAC/D,IAAI;IACF,MAAMX,uBAAuB,CAACY,cAAc,CAACL,QAAQ,EAAEI,cAAc,CAAC;IACtET,UAAU,CAAC,iCAAiC,CAAC;IAC7CW,kBAAkB,CAAC,KAAK,CAAC;IACzBT,YAAY,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}