{"ast":null,"code":"import api from './api';\nexport const courseManagementService = {\n  // Add new course\n  addCourse: async courseData => {\n    const response = await api.post('/course-management', courseData);\n    return response.data;\n  },\n  // Update course\n  updateCourse: async (id, courseData) => {\n    const response = await api.put(`/course-management/${id}`, courseData);\n    return response.data;\n  },\n  // Assign lecturer to course\n  assignLecturer: async (courseId, assignmentData) => {\n    const response = await api.post(`/course-management/${courseId}/assign`, assignmentData);\n    return response.data;\n  },\n  // Get all lecturers\n  getLecturers: async () => {\n    try {\n      const response = await api.get('/users/lecturers');\n      console.log('Lecturers fetched:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching lecturers:', error);\n      // Return empty array if API fails\n      return [];\n    }\n  }\n};","map":{"version":3,"names":["api","courseManagementService","addCourse","courseData","response","post","data","updateCourse","id","put","assignLecturer","courseId","assignmentData","getLecturers","get","console","log","error"],"sources":["C:/Users/FireBurn/Desktop/luct-reporting-app/frontend/src/services/courseManagementService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const courseManagementService = {\r\n    // Add new course\r\n    addCourse: async (courseData) => {\r\n        const response = await api.post('/course-management', courseData);\r\n        return response.data;\r\n    },\r\n\r\n    // Update course\r\n    updateCourse: async (id, courseData) => {\r\n        const response = await api.put(`/course-management/${id}`, courseData);\r\n        return response.data;\r\n    },\r\n\r\n    // Assign lecturer to course\r\n    assignLecturer: async (courseId, assignmentData) => {\r\n        const response = await api.post(`/course-management/${courseId}/assign`, assignmentData);\r\n        return response.data;\r\n    },\r\n\r\n    // Get all lecturers\r\n    getLecturers: async () => {\r\n        try {\r\n            const response = await api.get('/users/lecturers');\r\n            console.log('Lecturers fetched:', response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching lecturers:', error);\r\n            // Return empty array if API fails\r\n            return [];\r\n        }\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,uBAAuB,GAAG;EACnC;EACAC,SAAS,EAAE,MAAOC,UAAU,IAAK;IAC7B,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,oBAAoB,EAAEF,UAAU,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAC,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEL,UAAU,KAAK;IACpC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACS,GAAG,CAAC,sBAAsBD,EAAE,EAAE,EAAEL,UAAU,CAAC;IACtE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAI,cAAc,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,cAAc,KAAK;IAChD,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,sBAAsBM,QAAQ,SAAS,EAAEC,cAAc,CAAC;IACxF,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAED;EACAO,YAAY,EAAE,MAAAA,CAAA,KAAY;IACtB,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,GAAG,CAAC,kBAAkB,CAAC;MAClDC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEZ,QAAQ,CAACE,IAAI,CAAC;MAChD,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;MACA,OAAO,EAAE;IACb;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}