{"ast":null,"code":"import api from './api';\nexport const reportService = {\n  createReport: async reportData => {\n    const response = await api.post('/reports', reportData);\n    return response.data;\n  },\n  getReports: async () => {\n    const response = await api.get('/reports');\n    return response.data;\n  },\n  getReportById: async id => {\n    const response = await api.get(`/reports/${id}`);\n    return response.data;\n  },\n  searchReports: async query => {\n    const response = await api.get(`/search?q=${query}&type=reports`);\n    return response.data;\n  },\n  exportReports: async (startDate, endDate) => {\n    const response = await api.get(`/export/reports?startDate=${startDate}&endDate=${endDate}`, {\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","reportService","createReport","reportData","response","post","data","getReports","get","getReportById","id","searchReports","query","exportReports","startDate","endDate","responseType"],"sources":["C:/Users/FireBurn/Desktop/luct-reporting-app/frontend/src/services/reportService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const reportService = {\r\n    createReport: async (reportData) => {\r\n        const response = await api.post('/reports', reportData);\r\n        return response.data;\r\n    },\r\n\r\n    getReports: async () => {\r\n        const response = await api.get('/reports');\r\n        return response.data;\r\n    },\r\n\r\n    getReportById: async (id) => {\r\n        const response = await api.get(`/reports/${id}`);\r\n        return response.data;\r\n    },\r\n\r\n    searchReports: async (query) => {\r\n        const response = await api.get(`/search?q=${query}&type=reports`);\r\n        return response.data;\r\n    },\r\n\r\n    exportReports: async (startDate, endDate) => {\r\n        const response = await api.get(\r\n            `/export/reports?startDate=${startDate}&endDate=${endDate}`,\r\n            { responseType: 'blob' }\r\n        );\r\n        return response.data;\r\n    }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,aAAa,GAAG;EACzBC,YAAY,EAAE,MAAOC,UAAU,IAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,UAAU,EAAEF,UAAU,CAAC;IACvD,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDC,UAAU,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMH,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOJ,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDG,aAAa,EAAE,MAAOC,EAAE,IAAK;IACzB,MAAMN,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,GAAG,CAAC,YAAYE,EAAE,EAAE,CAAC;IAChD,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDK,aAAa,EAAE,MAAOC,KAAK,IAAK;IAC5B,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,GAAG,CAAC,aAAaI,KAAK,eAAe,CAAC;IACjE,OAAOR,QAAQ,CAACE,IAAI;EACxB,CAAC;EAEDO,aAAa,EAAE,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;IACzC,MAAMX,QAAQ,GAAG,MAAMJ,GAAG,CAACQ,GAAG,CAC1B,6BAA6BM,SAAS,YAAYC,OAAO,EAAE,EAC3D;MAAEC,YAAY,EAAE;IAAO,CAC3B,CAAC;IACD,OAAOZ,QAAQ,CAACE,IAAI;EACxB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}